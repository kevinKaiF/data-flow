<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC
        "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 该文件自动生成,请谨慎修改.不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="com.github.dataflow.dubbo.dao.DataNodeConfigurationDao">

    <resultMap id="RM_DataNodeConfig" type="com.github.dataflow.dubbo.model.DataNodeConfiguration">
        <result property="id" column="ID"/>
        <result property="type" column="TYPE"/>
        <result property="options" column="OPTIONS"/>
    </resultMap>

    <!-- 用于select查询公用抽取的列 -->
    <sql id="columns">
        <![CDATA[
			ID,TYPE,OPTIONS
	    ]]>
    </sql>

    <!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        <![CDATA[
	        INSERT INTO data_node_config (
	        	ID ,
	        	TYPE ,
	        	OPTIONS 
	        ) VALUES (
	        	#{id} ,
	        	#{type} ,
	        	#{options} 
	        )
	    ]]>
    </insert>

    <!-- update -->
    <sql id="update_sql">
        <set>
            <if test="type != null">
                TYPE = #{type} ,
            </if>
            <if test="options != null and options != ''">
                OPTIONS = #{options}
            </if>
        </set>
    </sql>

    <update id="update">
        UPDATE data_node_config
        <include refid="update_sql"/>
        WHERE
        ID = #{id}
    </update>

    <!-- delete -->
    <delete id="delete">
        <![CDATA[
        	DELETE FROM data_node_config 
        	WHERE
        		ID = #{id} 
    	]]>
    </delete>

    <delete id="deleteBatch">
        DELETE FROM data_node_config WHERE id IN
        <foreach item="ids" collection="list" open="(" separator="," close=")">
            #{ids}
        </foreach>
    </delete>

    <!-- selsect -->
    <select id="getById" resultMap="RM_DataNodeConfig">
        SELECT
        <include refid="columns"/>
        FROM data_node_config
        WHERE
        ID = #{id}
    </select>

    <sql id="findPage_where">
        <where>
            <if test="id != null">
                AND ID = #{id}
            </if>
            <if test="type != null">
                AND TYPE = #{type}
            </if>
            <if test="options != null and options !=''">
                AND OPTIONS = #{options}
            </if>
        </where>
    </sql>

    <select id="countByCondition" resultType="long">
        SELECT COUNT(1)
        FROM data_node_config
        <include refid="findPage_where"/>
    </select>

    <select id="findByCondition" resultMap="RM_DataNodeConfig">
        SELECT
        <include refid="columns"/>
        FROM data_node_config
        <include refid="findPage_where"/>
    </select>


</mapper>
